<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:RegexVideoPlayer.Windows.Styles">
    <ResourceDictionary.MergedDictionaries>
        <!-- Order is important -->
        <ResourceDictionary Source="Colors.xaml"/>
        <ResourceDictionary Source="Fonts.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- Hoverless button -->
    <Style TargetType="{x:Type Button}" x:Key="Hoverless">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- System icon button -->
    <Style TargetType="{x:Type Button}" x:Key="SystemIconButton" BasedOn="{StaticResource Hoverless}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Padding" Value="10"/>
    </Style>

    <!-- Window control button-->
    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}"/>

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Window close button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Navigation button -->
    <Style TargetType="{x:Type Button}" x:Key="NavigationBaseButton" BasedOn="{StaticResource NavigationButtonTextStyle}">
        <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetProperty="Width" From="{Binding NavigationButtonWidthCollapsed, FallbackValue=20}" To="{Binding NavigationButtonWidthHover, FallbackValue=80}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetProperty="Width" From="{Binding NavigationButtonWidthHover, FallbackValue=80}" To="{Binding NavigationButtonWidthCollapsed, FallbackValue=20}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Left navigation button -->
    <Style TargetType="{x:Type Button}" x:Key="NavigationLeftButton" BasedOn="{StaticResource NavigationBaseButton}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <!-- Right navigation button -->
    <Style TargetType="{x:Type Button}" x:Key="NavigationRightButton" BasedOn="{StaticResource NavigationBaseButton}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>
</ResourceDictionary>